jarfile=$PWD/test11.jar
entryclass=TestFuzzer
reached=[java.lang.ProcessBuilder].directory(java.io.File):[FunctionTest].functionSink():[java.lang.Runtime].exec(java.lang.String[],java.lang.String[],java.io.File):[FunctionTest].functionSafe():[java.lang.Runtime].exec(java.lang.String,java.lang.String[],java.io.File):[TestFuzzer].fuzzerTestOneInput(com.code_intelligence.jazzer.api.FuzzedDataProvider):[java.lang.Runtime].exec(java.lang.String):[java.lang.ProcessBuilder].start():[java.lang.ProcessBuilder].start(java.lang.ProcessBuilder$Redirect[])
unreached=[TestFuzzer].main(java.lang.String[]):[FunctionTest].functionSafeDead():[FunctionTest].functionSinkDead()
optimalreached=[java.lang.ProcessBuilder].directory(java.io.File):[FunctionTest].functionSink():[java.lang.Runtime].exec(java.lang.String[],java.lang.String[],java.io.File):[FunctionTest].functionSafe():[java.lang.Runtime].exec(java.lang.String,java.lang.String[],java.io.File):[TestFuzzer].fuzzerTestOneInput(com.code_intelligence.jazzer.api.FuzzedDataProvider):[java.lang.Runtime].exec(java.lang.String):[java.lang.ProcessBuilder].start():[java.lang.ProcessBuilder].start(java.lang.ProcessBuilder$Redirect[])
optimalunreached=[TestFuzzer].main(java.lang.String[]):[FunctionTest].functionSafeDead():[FunctionTest].functionSinkDead()
filereached=TestFuzzer:['']
filecovered=TestFuzzer:['']
