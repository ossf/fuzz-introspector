diff --git a/infra/base-images/base-builder/Dockerfile b/infra/base-images/base-builder/Dockerfile
index aa954a17..c033e1c4 100644
--- a/infra/base-images/base-builder/Dockerfile
+++ b/infra/base-images/base-builder/Dockerfile
@@ -160,5 +160,9 @@ COPY cargo compile compile_afl compile_libfuzzer compile_honggfuzz \
 COPY llvmsymbol.diff $SRC
 COPY detect_repo.py /opt/cifuzz/
 COPY bazel.bazelrc /root/.bazelrc
+RUN rm -rf /fuzz-introspector/src
+RUN rm -rf /fuzz-introspector/frontends
+COPY src /fuzz-introspector/src
+COPY frontends /fuzz-introspector/frontends
 
 CMD ["compile"]
diff --git a/infra/base-images/base-builder/compile b/infra/base-images/base-builder/compile
index 3039f0ab..61dea7ff 100755
--- a/infra/base-images/base-builder/compile
+++ b/infra/base-images/base-builder/compile
@@ -211,7 +211,8 @@ if [ "$SANITIZER" = "introspector" ]; then
   unset CFLAGS
   apt-get install -y libjpeg-dev zlib1g-dev
   pip3 install --upgrade setuptools
-  pip3 install cxxfilt pyyaml beautifulsoup4 lxml soupsieve matplotlib
+  pip3 install cxxfilt pyyaml beautifulsoup4 lxml soupsieve
+  pip3 install --prefer-binary matplotlib
   mkdir -p $SRC/inspector
 
   find $SRC/ -name "fuzzerLogFile-*.data" -exec cp {} $SRC/inspector/ \;
diff --git a/infra/base-images/base-clang/Dockerfile b/infra/base-images/base-clang/Dockerfile
index 848c03d4..a0ab96bf 100644
--- a/infra/base-images/base-clang/Dockerfile
+++ b/infra/base-images/base-clang/Dockerfile
@@ -45,6 +45,8 @@ RUN apt-get update && apt-get install -y git && \
 COPY checkout_build_install_llvm.sh /root/
 # Keep all steps in the same script to decrease the number of intermediate
 # layes in docker file.
+RUN rm -rf /fuzz-introspector
+COPY fuzz-introspector fuzz-introspector
 RUN /root/checkout_build_install_llvm.sh
 RUN rm /root/checkout_build_install_llvm.sh
 
diff --git a/infra/base-images/base-runner/Dockerfile b/infra/base-images/base-runner/Dockerfile
index bc034e19..929e3499 100755
--- a/infra/base-images/base-runner/Dockerfile
+++ b/infra/base-images/base-runner/Dockerfile
@@ -19,7 +19,7 @@
 FROM gcr.io/oss-fuzz-base/base-image as temp-runner-binary-builder
 
 RUN apt-get update && apt-get install -y cargo
-RUN cargo install rustfilt
+#RUN cargo install rustfilt
 
 # Using multi-stage build to copy some LLVM binaries needed in the runner image.
 FROM gcr.io/oss-fuzz-base/base-clang AS base-clang
@@ -27,7 +27,7 @@ FROM gcr.io/oss-fuzz-base/base-clang AS base-clang
 # Real image that will be used later.
 FROM gcr.io/oss-fuzz-base/base-image
 
-COPY --from=temp-runner-binary-builder /root/.cargo/bin/rustfilt /usr/local/bin
+#COPY --from=temp-runner-binary-builder /root/.cargo/bin/rustfilt /usr/local/bin
 
 # Copy the binaries needed for code coverage and crash symbolization.
 COPY --from=base-clang /usr/local/bin/llvm-cov \
diff --git a/projects/jackson-databind/build.sh b/projects/jackson-databind/build.sh
index b5ea5b01..fa0001ba 100755
--- a/projects/jackson-databind/build.sh
+++ b/projects/jackson-databind/build.sh
@@ -55,6 +55,9 @@ BUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- "$OUT/%s:"):$JAZZER_API_PATH
 # All .jar and .class files lie in the same directory as the fuzzer at runtime.
 RUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- "\$this_dir/%s:"):\$this_dir
 
+jarfile=
+class=
+
 for fuzzer in $(find $SRC -name '*Fuzzer.java'); do
   fuzzer_basename=$(basename -s .java $fuzzer)
   javac -cp $BUILD_CLASSPATH $fuzzer
@@ -68,6 +71,18 @@ for fuzzer in $(find $SRC -name '*Fuzzer.java'); do
     cp $SRC/$fuzzer_basename\$MockFuzzDataInput.class $OUT/
   fi
 
+    cd $OUT
+    jar cvf $fuzzer_basename.jar $fuzzer_basename*.class
+    if [ -z "$jarfile" ]
+    then
+           jarfile=$OUT/$fuzzer_basename.jar
+           class=$fuzzer_basename
+    else
+           jarfile=$jarfile:$OUT/$fuzzer_basename.jar
+           class=$class:$fuzzer_basename
+    fi
+    cd -
+
   # Create an execution wrapper that executes Jazzer with the correct arguments.
   echo "#!/bin/bash
 # LLVMFuzzerTestOneInput for fuzzer detection.
@@ -86,3 +101,14 @@ LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\$this_dir \
 \$@" > $OUT/$fuzzer_basename
   chmod u+x $OUT/$fuzzer_basename
 done
+
+cd $OUT
+rm -rf fuzz-introspector
+git clone https://github.com/ossf/fuzz-introspector
+jarfile=$jarfile:$OUT/jackson-databind.jar:$OUT/jackson-core.jar:$OUT/jackson-annotations.jar
+cd fuzz-introspector/frontends/java/soot
+sed -i 's/mvn/$MVN/g' run.sh
+./run.sh -j $jarfile -c $class -m fuzzerTestOneInput
+cd $OUT
+cp fuzz-introspector/frontends/java/soot/*.result ./
+rm -rf fuzz-introspector
