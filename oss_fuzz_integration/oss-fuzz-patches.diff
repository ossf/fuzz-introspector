diff --git a/infra/base-images/base-builder/Dockerfile b/infra/base-images/base-builder/Dockerfile
index 828155e9d..f95198a49 100644
--- a/infra/base-images/base-builder/Dockerfile
+++ b/infra/base-images/base-builder/Dockerfile
@@ -190,6 +190,16 @@ COPY llvmsymbol.diff $SRC
 COPY detect_repo.py /opt/cifuzz/
 COPY bazel.bazelrc /root/.bazelrc
 
+RUN rm -rf /fuzz-introspector/src
+RUN rm -rf /fuzz-introspector/frontends
+COPY src /fuzz-introspector/src
+COPY frontends /fuzz-introspector/frontends
+
+RUN rm -rf /fuzz-introspector/src
+RUN rm -rf /fuzz-introspector/frontends
+COPY src /fuzz-introspector/src
+COPY frontends /fuzz-introspector/frontends
+
 # Set up ccache binary and cache directory.
 # /ccache/bin will contain the compiler wrappers, and /ccache/cache will
 # contain the actual cache, which can be saved.
diff --git a/infra/base-images/base-clang/Dockerfile b/infra/base-images/base-clang/Dockerfile
index 8f6486896..b4f50ac36 100644
--- a/infra/base-images/base-clang/Dockerfile
+++ b/infra/base-images/base-clang/Dockerfile
@@ -45,6 +45,9 @@ RUN apt-get update && apt-get install -y git && \
 COPY checkout_build_install_llvm.sh /root/
 # Keep all steps in the same script to decrease the number of intermediate
 # layes in docker file.
+RUN rm -rf /fuzz-introspector
+COPY fuzz-introspector fuzz-introspector
+
 RUN /root/checkout_build_install_llvm.sh
 RUN rm /root/checkout_build_install_llvm.sh
 
diff --git a/infra/base-images/base-builder/compile b/infra/base-images/base-builder/compile
index 1c10d9e23..6a97bc287 100755
--- a/infra/base-images/base-builder/compile
+++ b/infra/base-images/base-builder/compile
@@ -238,6 +238,8 @@ if [ "$SANITIZER" = "introspector" ] || [ "$RUST_SANITIZER" = "introspector" ];
     python3 /fuzz-introspector/src/main.py light --language=jvm
   elif [ "$FUZZING_LANGUAGE" = "rust" ]; then
     python3 /fuzz-introspector/src/main.py light --language=rust
+  elif [ "$FUZZING_LANGUAGE" = "go" ]; then
+    python3 /fuzz-introspector/src/main.py light --language=go
   else
     python3 /fuzz-introspector/src/main.py light
   fi
@@ -318,26 +333,36 @@ if [ "$SANITIZER" = "introspector" ] || [ "$RUST_SANITIZER" = "introspector" ];
 
     set -x
     # Output will be put in /out/
-    python3 /fuzz-introspector/frontends/java/oss-fuzz-main.py
+    # Using new approach
+    python3 -m fuzz_introspector.frontends.oss_fuzz --language jvm --target-dir $SRC --entrypoint fuzzerTestOneInput
+    # python3 /fuzz-introspector/frontends/java/oss-fuzz-main.py
     # Move files temporarily to fit workflow of other languages.
     mkdir -p $SRC/my-fi-data
-    find $OUT/ -name *.data -exec mv {} $SRC/my-fi-data/ \;
-    find $OUT/ -name *.data.yaml -exec mv {} $SRC/my-fi-data/ \;
+    find ./ -name *.data -exec mv {} $SRC/my-fi-data/ \;
+    find ./ -name *.data.yaml -exec mv {} $SRC/my-fi-data/ \;
   elif [ "$FUZZING_LANGUAGE" = "rust" ]; then
     echo "GOING rust route"
 
     # Run the rust frontend
-    pushd /fuzz-introspector/frontends/rust/rust_function_analyser
-    cargo run -- $SRC
+    python3 -m fuzz_introspector.frontends.oss_fuzz --language rust --target-dir $SRC
 
     # Move files temporarily to fix workflow of other languages.
     mkdir -p $SRC/my-fi-data
     find ./ -name "*.data" -exec mv {} $SRC/my-fi-data/ \;
     find ./ -name "*.data.yaml" -exec mv {} $SRC/my-fi-data/ \;
-    popd
 
     # Restore the sanitizer flag for rust
     export SANITIZER="introspector"
+  elif [ "$FUZZING_LANGUAGE" = "go" ]; then
+    echo "GOING go route"
+
+    # Run the go frontend
+    python3 -m fuzz_introspector.frontends.oss_fuzz --language go --target-dir $SRC
+
+    # Move files temporarily to fix workflow of other languages.
+    mkdir -p $SRC/my-fi-data
+    find ./ -name "*.data" -exec mv {} $SRC/my-fi-data/ \;
+    find ./ -name "*.data.yaml" -exec mv {} $SRC/my-fi-data/ \;
   fi
 
   mkdir -p $SRC/inspector
diff --git a/infra/base-images/base-runner/coverage b/infra/base-images/base-runner/coverage
index 585b4d457..014bdbce6 100755
--- a/infra/base-images/base-runner/coverage
+++ b/infra/base-images/base-runner/coverage
@@ -382,6 +382,26 @@ if [[ $FUZZING_LANGUAGE == "go" ]]; then
   echo $DUMPS_DIR
   $SYSGOPATH/bin/gocovmerge $DUMPS_DIR/*.profdata > fuzz.cov
   gotoolcover -html=fuzz.cov -o $REPORT_ROOT_DIR/index.html
+
+  # Patch the html with additional javascript to allow direct url
+  # selection of target source file.
+  SCRIPT='<script>
+    function handleHashChange() {
+        const hash = location.hash.substr(1);
+        const files = document.getElementById("files");
+        if (files && hash) {
+            files.value = hash;
+            files.dispatchEvent(new Event("change"));
+        }
+    }
+    window.addEventListener("hashchange", handleHashChange);
+    window.addEventListener("DOMContentLoaded", handleHashChange);
+    </script>
+    </html>'
+  sed -i "/<\/html>/d" $REPORT_ROOT_DIR/index.html
+  echo $SCRIPT >> $REPORT_ROOT_DIR/index.html
+  echo "</html>" >> $REPORT_ROOT_DIR/index.html
+
   $SYSGOPATH/bin/gocovsum fuzz.cov > $SUMMARY_FILE
   cp $REPORT_ROOT_DIR/index.html $REPORT_PLATFORM_DIR/index.html
   $SYSGOPATH/bin/pprof-merge $DUMPS_DIR/*.perf.cpu.prof

